swagger: "2.0"
info:
  version: "0.0.1"
  title: "openAPIMock"
consumes:
  - "application/json"
produces:
  - "application/json"
  - "application/xml"
tags:
  - name: "Countries"
    description: "Countries Controller"
  - name: "Promotions"
    description: "Promotions Controller"
  - name: "Site Messages"
    description: "Site Message Controller"
  - name: "Customer Groups"
    description: "Customer Groups Controller"
  - name: "Save Cart"
    description: "Save Cart Controller"
  - name: "Customer Interests"
    description: "Customer Interests Controller"
  - name: "Miscs"
    description: "Miscs Controller"
  - name: "Users"
    description: "Users Controller"
  - name: "Base Stores"
    description: "Base Stores Controller"
  - name: "Catalogs"
    description: "Catalogs Controller"
  - name: "Merchant Callback"
    description: "Merchant Callback Controller"
  - name: "Stores"
    description: "Stores Controller"
  - name: "Page"
    description: "Page Controller"
  - name: "Forgotten Passwords"
    description: "Forgotten Passwords Controller"
  - name: "Consignment Tracking"
    description: "Consignment Tracking Controller"
  - name: "Products"
    description: "Products Controller"
  - name: "Extended Carts"
    description: "Extended Carts Controller"
  - name: "Notification Preference"
    description: "Notification Preference Controller"
  - name: "Component"
    description: "Component Controller"
  - name: "Consents"
    description: "Consents Controller"
  - name: "Stock Notifications"
    description: "Stock Notification Controller"
  - name: "Export"
    description: "Export Controller"
  - name: "Vouchers"
    description: "Vouchers Controller"
  - name: "Feeds"
    description: "Feeds Controller"
  - name: "Orders"
    description: "Orders Controller"
  - name: "Carts"
    description: "Carts Controller"
paths:
  /{baseSiteId}/basestores/{baseStoreUid}:
    get:
      tags:
        - "Base Stores"
      summary: "Get a base store"
      description: "Returns details of a specific base store based on its identifier. The response contains detailed base store information."
      operationId: "getBaseStoreUsingGET"
      consumes:
        - "application/json"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "baseStoreUid"
          in: "path"
          description: "Base store name"
          required: true
          default: "1"
          type: "string"
        - name: "fields"
          in: "query"
          description: "Response configuration. This is the list of fields that should be returned in the response body."
          required: false
          type: "string"
          default: "DEFAULT"
          enum:
            - "BASIC"
            - "DEFAULT"
            - "FULL"
        - name: "baseSiteId"
          in: "path"
          description: "Base site identifier"
          required: true
          default: "1"
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/BaseStoreWsDTO"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /{baseSiteId}/cardtypes:
    x-swagger-router-controller: "mock_controller"
    get:
      tags:
        - "Miscs"
      summary: "Get a list of supported payment card types."
      description: "Lists supported payment card types."
      consumes:
        - "application/json"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "fields"
          in: "query"
          description: "Response configuration. This is the list of fields that should be returned in the response body."
          required: false
          type: "string"
          default: "DEFAULT"
          enum:
            - "BASIC"
            - "DEFAULT"
            - "FULL"
        - name: "baseSiteId"
          in: "path"
          description: "Base site identifier"
          required: true
          default: "1"
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CardTypeListWsDTO"
            default:
              cardTypes:
                - code: "code1"
                  name: "card1"
                - code: "code2"
                  name: "card2"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /{baseSiteId}/catalogs:
    get:
      tags:
        - "Catalogs"
      summary: "Get a list of catalogs"
      description: "Returns all catalogs with versions defined for the base store."
      operationId: "getCatalogsUsingGET"
      consumes:
        - "application/json"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "fields"
          in: "query"
          description: "Response configuration. This is the list of fields that should be returned in the response body."
          required: false
          type: "string"
          default: "DEFAULT"
          enum:
            - "BASIC"
            - "DEFAULT"
            - "FULL"
        - name: "baseSiteId"
          in: "path"
          description: "Base site identifier"
          required: true
          default: "1"
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CatalogListWsDTO"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /{baseSiteId}/catalogs/{catalogId}:
    get:
      tags:
        - "Catalogs"
      summary: "Get a catalog"
      description: "Returns information about a catalog based on its ID, along with the versions defined for the current base store."
      operationId: "getCatalogUsingGET"
      consumes:
        - "application/json"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "catalogId"
          in: "path"
          description: "Catalog identifier"
          required: true
          default: "1"
          type: "string"
        - name: "fields"
          in: "query"
          description: "Response configuration. This is the list of fields that should be returned in the response body."
          required: false
          type: "string"
          default: "DEFAULT"
          enum:
            - "BASIC"
            - "DEFAULT"
            - "FULL"
        - name: "baseSiteId"
          in: "path"
          description: "Base site identifier"
          required: true
          default: "1"
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CatalogWsDTO"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /{baseSiteId}/catalogs/{catalogId}/{catalogVersionId}:
    get:
      tags:
        - "Catalogs"
      summary: "Get information about catalog version"
      description: "Returns information about the catalog version that exists for the current base store."
      operationId: "getCatalogVersionUsingGET"
      consumes:
        - "application/json"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "catalogId"
          in: "path"
          description: "Catalog identifier"
          required: true
          default: "1"
          type: "string"
        - name: "catalogVersionId"
          in: "path"
          description: "Catalog version identifier"
          required: true
          default: "1"
          type: "string"
        - name: "fields"
          in: "query"
          description: "Response configuration. This is the list of fields that should be returned in the response body."
          required: false
          type: "string"
          default: "DEFAULT"
          enum:
            - "BASIC"
            - "DEFAULT"
            - "FULL"
        - name: "baseSiteId"
          in: "path"
          description: "Base site identifier"
          required: true
          default: "1"
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CatalogVersionWsDTO"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /{baseSiteId}/catalogs/{catalogId}/{catalogVersionId}/categories/{categoryId}:
    get:
      tags:
        - "Catalogs"
      summary: "Get information about catagory in a catalog version"
      description: "Returns information about a specified category that exists in a catalog version available for the current base store."
      operationId: "getCategoriesUsingGET"
      consumes:
        - "application/json"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - name: "catalogId"
          in: "path"
          description: "Catalog identifier"
          required: true
          default: "1"
          type: "string"
        - name: "catalogVersionId"
          in: "path"
          description: "Catalog version identifier"
          required: true
          default: "1"
          type: "string"
        - name: "categoryId"
          in: "path"
          description: "Category identifier"
          required: true
          default: "1"
          type: "string"
        - name: "fields"
          in: "query"
          description: "Response configuration. This is the list of fields that should be returned in the response body."
          required: false
          type: "string"
          default: "DEFAULT"
          enum:
            - "BASIC"
            - "DEFAULT"
            - "FULL"
        - name: "baseSiteId"
          in: "path"
          description: "Base site identifier"
          required: true
          default: "1"
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/CategoryHierarchyWsDTO"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /{baseSiteId}/cms/components:
    post:
      tags:
        - "Component"
      summary: "Get components' data by id given in body"
      description: "Given a list of component identifiers in body, return cms component data."
      operationId: "getComponentByIdListUsingPOST"
      consumes:
        - "application/json"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "componentIdList"
          description: "List of Component identifiers"
          required: true
          schema:
            $ref: "#/definitions/ComponentIDListWsDTO"
        - name: "catalogCode"
          in: "query"
          description: "Catalog code"
          required: false
          type: "string"
        - name: "productCode"
          in: "query"
          description: "Product code"
          required: false
          type: "string"
        - name: "categoryCode"
          in: "query"
          description: "Category code"
          required: false
          type: "string"
        - name: "fields"
          in: "query"
          description: "Response configuration (list of fields, which should be returned in response)"
          required: false
          type: "string"
          default: "DEFAULT"
          enum:
            - "BASIC"
            - "DEFAULT"
            - "FULL"
        - name: "currentPage"
          in: "query"
          description: "Optional pagination parameter. Default value 0."
          required: false
          type: "integer"
          default: 0
          format: "int32"
        - name: "pageSize"
          in: "query"
          description: "Optional pagination parameter. Default value 10."
          required: false
          type: "integer"
          default: 10
          format: "int32"
        - name: "sort"
          in: "query"
          description: "Optional sort criterion. No default value."
          required: false
          type: "string"
        - name: "baseSiteId"
          in: "path"
          description: "Base site identifier"
          required: true
          default: "1"
          type: "string"
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/ListAdaptedComponents"
        201:
          description: "Created"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Not Found"
  /authorizationserver/oauth/token:
    post:
      summary: "Get OAuth2 access token"
      description: "Returns the acess token for Kyma"
      consumes:
        - "application/json"
      produces:
        - "application/xml"
        - "application/json"
      parameters:
        - in: "body"
          name: "parameters"
          description: "List of Component identifiers"
          required: true
          schema:
            type: "object"
            properties:
              client_id:
                type: "string"
              client_secret:
                type: "string"
              grant_type:
                type: "string"
      responses:
        200:
          description: "OK"
          schema:
            type: "object"
            properties:
              access_token_url:
                type: "string"
            default:
              token: "3333"
        404:
          description: "Not Found"
securityDefinitions:
  oauth2_Password:
    type: "oauth2"
    tokenUrl: "/authorizationserver/oauth/token"
    flow: "password"
    scopes:
      basic: ""
  oauth2_client_credentials:
    type: "oauth2"
    tokenUrl: "/authorizationserver/oauth/token"
    flow: "application"
    scopes:
      extended: ""
definitions:
  AddressListWsDTO:
    type: "object"
    properties:
      addresses:
        type: "array"
        items:
          $ref: "#/definitions/AddressWsDTO"
  AddressValidationWsDTO:
    type: "object"
    properties:
      decision:
        type: "string"
      errors:
        $ref: "#/definitions/errorList"
      suggestedAddresses:
        type: "array"
        items:
          $ref: "#/definitions/AddressWsDTO"
  AddressWsDTO:
    type: "object"
    properties:
      companyName:
        type: "string"
      country:
        $ref: "#/definitions/CountryWsDTO"
      defaultAddress:
        type: "boolean"
      email:
        type: "string"
      firstName:
        type: "string"
      formattedAddress:
        type: "string"
      id:
        type: "string"
      lastName:
        type: "string"
      line1:
        type: "string"
      line2:
        type: "string"
      phone:
        type: "string"
      postalCode:
        type: "string"
      region:
        $ref: "#/definitions/RegionWsDTO"
      shippingAddress:
        type: "boolean"
      title:
        type: "string"
      titleCode:
        type: "string"
      town:
        type: "string"
      visibleInAddressBook:
        type: "boolean"
  BaseOptionWsDTO:
    type: "object"
    properties:
      options:
        type: "array"
        items:
          $ref: "#/definitions/VariantOptionWsDTO"
      selected:
        $ref: "#/definitions/VariantOptionWsDTO"
      variantType:
        type: "string"
  BaseStoreWsDTO:
    type: "object"
    properties:
      createReturnProcessCode:
        type: "string"
      currencies:
        type: "array"
        items:
          $ref: "#/definitions/CurrencyWsDTO"
      defaultCurrency:
        $ref: "#/definitions/CurrencyWsDTO"
      defaultDeliveryOrigin:
        $ref: "#/definitions/PointOfServiceWsDTO"
      defaultLanguage:
        $ref: "#/definitions/LanguageWsDTO"
      deliveryCountries:
        type: "array"
        items:
          $ref: "#/definitions/CountryWsDTO"
      deliveryModes:
        $ref: "#/definitions/DeliveryModeListWsDTO"
      externalTaxEnabled:
        type: "boolean"
      languages:
        type: "array"
        items:
          $ref: "#/definitions/LanguageWsDTO"
      maxRadiusForPosSearch:
        type: "number"
        format: "double"
      name:
        type: "string"
      paymentProvider:
        type: "string"
      pointsOfService:
        type: "array"
        items:
          $ref: "#/definitions/PointOfServiceWsDTO"
      submitOrderProcessCode:
        type: "string"
  BreadcrumbWsDTO:
    type: "object"
    properties:
      facetCode:
        type: "string"
      facetName:
        type: "string"
      facetValueCode:
        type: "string"
      facetValueName:
        type: "string"
      removeQuery:
        $ref: "#/definitions/SearchStateWsDTO"
      truncateQuery:
        $ref: "#/definitions/SearchStateWsDTO"
  CMSPageWsDTO:
    type: "object"
    properties:
      contentSlots:
        $ref: "#/definitions/ContentSlotListWsDTO"
      defaultPage:
        type: "boolean"
      name:
        type: "string"
      template:
        type: "string"
      title:
        type: "string"
      typeCode:
        type: "string"
      uid:
        type: "string"
  CardTypeListWsDTO:
    type: "object"
    properties:
      cardTypes:
        type: "array"
        items:
          $ref: "#/definitions/CardTypeWsDTO"
  CardTypeWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      name:
        type: "string"
  CartListWsDTO:
    type: "object"
    properties:
      carts:
        type: "array"
        items:
          $ref: "#/definitions/CartWsDTO"
  CartModificationListWsDTO:
    type: "object"
    properties:
      cartModifications:
        type: "array"
        items:
          $ref: "#/definitions/CartModificationWsDTO"
  CartModificationWsDTO:
    type: "object"
    properties:
      deliveryModeChanged:
        type: "boolean"
      entry:
        $ref: "#/definitions/OrderEntryWsDTO"
      quantity:
        type: "integer"
        format: "int64"
      quantityAdded:
        type: "integer"
        format: "int64"
      statusCode:
        type: "string"
      statusMessage:
        type: "string"
  CartWsDTO:
    type: "object"
    properties:
      appliedOrderPromotions:
        type: "array"
        items:
          $ref: "#/definitions/PromotionResultWsDTO"
      appliedProductPromotions:
        type: "array"
        items:
          $ref: "#/definitions/PromotionResultWsDTO"
      appliedVouchers:
        type: "array"
        items:
          $ref: "#/definitions/VoucherWsDTO"
      calculated:
        type: "boolean"
      code:
        type: "string"
      deliveryAddress:
        $ref: "#/definitions/AddressWsDTO"
      deliveryCost:
        $ref: "#/definitions/PriceWsDTO"
      deliveryItemsQuantity:
        type: "integer"
        format: "int64"
      deliveryMode:
        $ref: "#/definitions/DeliveryModeWsDTO"
      deliveryOrderGroups:
        type: "array"
        items:
          $ref: "#/definitions/DeliveryOrderEntryGroupWsDTO"
      description:
        type: "string"
      entries:
        type: "array"
        items:
          $ref: "#/definitions/OrderEntryWsDTO"
      expirationTime:
        type: "string"
        format: "date-time"
      guid:
        type: "string"
      name:
        type: "string"
      net:
        type: "boolean"
      orderDiscounts:
        $ref: "#/definitions/PriceWsDTO"
      paymentInfo:
        $ref: "#/definitions/PaymentDetailsWsDTO"
      pickupItemsQuantity:
        type: "integer"
        format: "int64"
      pickupOrderGroups:
        type: "array"
        items:
          $ref: "#/definitions/PickupOrderEntryGroupWsDTO"
      potentialOrderPromotions:
        type: "array"
        items:
          $ref: "#/definitions/PromotionResultWsDTO"
      potentialProductPromotions:
        type: "array"
        items:
          $ref: "#/definitions/PromotionResultWsDTO"
      productDiscounts:
        $ref: "#/definitions/PriceWsDTO"
      saveTime:
        type: "string"
        format: "date-time"
      savedBy:
        $ref: "#/definitions/PrincipalWsDTO"
      site:
        type: "string"
      store:
        type: "string"
      subTotal:
        $ref: "#/definitions/PriceWsDTO"
      totalDiscounts:
        $ref: "#/definitions/PriceWsDTO"
      totalItems:
        type: "integer"
        format: "int32"
      totalPrice:
        $ref: "#/definitions/PriceWsDTO"
      totalPriceWithTax:
        $ref: "#/definitions/PriceWsDTO"
      totalTax:
        $ref: "#/definitions/PriceWsDTO"
      totalUnitCount:
        type: "integer"
        format: "int32"
      user:
        $ref: "#/definitions/PrincipalWsDTO"
  CatalogListWsDTO:
    type: "object"
    properties:
      catalogs:
        type: "array"
        items:
          $ref: "#/definitions/CatalogWsDTO"
  CatalogVersionWsDTO:
    type: "object"
    properties:
      categories:
        type: "array"
        items:
          $ref: "#/definitions/CategoryHierarchyWsDTO"
      id:
        type: "string"
      lastModified:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      url:
        type: "string"
  CatalogWsDTO:
    type: "object"
    properties:
      catalogVersions:
        type: "array"
        items:
          $ref: "#/definitions/CatalogVersionWsDTO"
      id:
        type: "string"
      lastModified:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      url:
        type: "string"
  CategoryHierarchyWsDTO:
    type: "object"
    properties:
      id:
        type: "string"
      lastModified:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      subcategories:
        type: "array"
        items:
          $ref: "#/definitions/CategoryHierarchyWsDTO"
      url:
        type: "string"
  CategoryWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      image:
        $ref: "#/definitions/ImageWsDTO"
      url:
        type: "string"
  ClassificationWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      features:
        type: "array"
        items:
          $ref: "#/definitions/FeatureWsDTO"
      name:
        type: "string"
  ComponentAdaptedData:
    type: "object"
  ComponentIDListWsDTO:
    type: "object"
    properties:
      idList:
        type: "array"
        items:
          type: "string"
  ComponentListWsDTO:
    type: "object"
    properties:
      component:
        type: "array"
        items:
          $ref: "#/definitions/ComponentWsDTO"
  ComponentWsDTO:
    type: "object"
    properties:
      modifiedtime:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      otherProperties:
        type: "object"
      typeCode:
        type: "string"
      uid:
        type: "string"
  ConfigurationInfoWsDTO:
    type: "object"
    properties:
      configurationLabel:
        type: "string"
      configurationValue:
        type: "string"
      configuratorType:
        type: "string"
      status:
        type: "string"
  ConsentTemplateListWsDTO:
    type: "object"
    properties:
      consentTemplates:
        type: "array"
        items:
          $ref: "#/definitions/ConsentTemplateWsDTO"
  ConsentTemplateWsDTO:
    type: "object"
    properties:
      currentConsent:
        $ref: "#/definitions/ConsentWsDTO"
      description:
        type: "string"
      id:
        type: "string"
      name:
        type: "string"
      version:
        type: "integer"
        format: "int32"
  ConsentWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      consentGivenDate:
        type: "string"
        format: "date-time"
      consentWithdrawnDate:
        type: "string"
        format: "date-time"
  ConsignmentEntryWsDTO:
    type: "object"
    properties:
      orderEntry:
        $ref: "#/definitions/OrderEntryWsDTO"
      quantity:
        type: "integer"
        format: "int64"
      shippedQuantity:
        type: "integer"
        format: "int64"
  ConsignmentWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      deliveryPointOfService:
        $ref: "#/definitions/PointOfServiceWsDTO"
      entries:
        type: "array"
        items:
          $ref: "#/definitions/ConsignmentEntryWsDTO"
      shippingAddress:
        $ref: "#/definitions/AddressWsDTO"
      status:
        type: "string"
      statusDate:
        type: "string"
        format: "date-time"
      trackingID:
        type: "string"
  ContentSlotListWsDTO:
    type: "object"
    properties:
      contentSlot:
        type: "array"
        items:
          $ref: "#/definitions/ContentSlotWsDTO"
  ContentSlotWsDTO:
    type: "object"
    properties:
      components:
        $ref: "#/definitions/ComponentListWsDTO"
      name:
        type: "string"
      position:
        type: "string"
      slotId:
        type: "string"
      slotShared:
        type: "boolean"
      slotStatus:
        type: "string"
  CountryListWsDTO:
    type: "object"
    properties:
      countries:
        type: "array"
        items:
          $ref: "#/definitions/CountryWsDTO"
  CountryWsDTO:
    type: "object"
    properties:
      isocode:
        type: "string"
      name:
        type: "string"
  CurrencyListWsDTO:
    type: "object"
    properties:
      currencies:
        type: "array"
        items:
          $ref: "#/definitions/CurrencyWsDTO"
  CurrencyWsDTO:
    type: "object"
    properties:
      active:
        type: "boolean"
      isocode:
        type: "string"
      name:
        type: "string"
      symbol:
        type: "string"
  DeliveryModeListWsDTO:
    type: "object"
    properties:
      deliveryModes:
        type: "array"
        items:
          $ref: "#/definitions/DeliveryModeWsDTO"
  DeliveryModeWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      deliveryCost:
        $ref: "#/definitions/PriceWsDTO"
      description:
        type: "string"
      name:
        type: "string"
  DeliveryOrderEntryGroupWsDTO:
    type: "object"
    properties:
      deliveryAddress:
        $ref: "#/definitions/AddressWsDTO"
      entries:
        type: "array"
        items:
          $ref: "#/definitions/OrderEntryWsDTO"
      quantity:
        type: "integer"
        format: "int64"
      totalPriceWithTax:
        $ref: "#/definitions/PriceWsDTO"
  FacetValueWsDTO:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      query:
        $ref: "#/definitions/SearchStateWsDTO"
      selected:
        type: "boolean"
  FacetWsDTO:
    type: "object"
    properties:
      category:
        type: "boolean"
      multiSelect:
        type: "boolean"
      name:
        type: "string"
      priority:
        type: "integer"
        format: "int32"
      topValues:
        type: "array"
        items:
          $ref: "#/definitions/FacetValueWsDTO"
      values:
        type: "array"
        items:
          $ref: "#/definitions/FacetValueWsDTO"
      visible:
        type: "boolean"
  FeatureUnitWsDTO:
    type: "object"
    properties:
      name:
        type: "string"
      symbol:
        type: "string"
      unitType:
        type: "string"
  FeatureValueWsDTO:
    type: "object"
    properties:
      value:
        type: "string"
  FeatureWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      comparable:
        type: "boolean"
      description:
        type: "string"
      featureUnit:
        $ref: "#/definitions/FeatureUnitWsDTO"
      featureValues:
        type: "array"
        items:
          $ref: "#/definitions/FeatureValueWsDTO"
      name:
        type: "string"
      range:
        type: "boolean"
      type:
        type: "string"
  FutureStockWsDTO:
    type: "object"
    properties:
      date:
        type: "string"
        format: "date-time"
      formattedDate:
        type: "string"
      stock:
        $ref: "#/definitions/StockWsDTO"
  GeoPointWsDTO:
    type: "object"
    properties:
      latitude:
        type: "number"
        format: "double"
      longitude:
        type: "number"
        format: "double"
  ImageWsDTO:
    type: "object"
    properties:
      altText:
        type: "string"
      format:
        type: "string"
      galleryIndex:
        type: "integer"
        format: "int32"
      imageType:
        type: "string"
        enum:
          - "PRIMARY"
          - "GALLERY"
      url:
        type: "string"
  LanguageListWsDTO:
    type: "object"
    properties:
      languages:
        type: "array"
        items:
          $ref: "#/definitions/LanguageWsDTO"
  LanguageWsDTO:
    type: "object"
    properties:
      active:
        type: "boolean"
      isocode:
        type: "string"
      name:
        type: "string"
      nativeName:
        type: "string"
  ListAdaptedComponents:
    type: "object"
    properties:
      components:
        type: "array"
        items:
          $ref: "#/definitions/ComponentAdaptedData"
      pagination:
        $ref: "#/definitions/pagination"
      sorts:
        type: "array"
        items:
          $ref: "#/definitions/sort"
  MemberListWsDTO:
    type: "object"
    properties:
      members:
        type: "array"
        items:
          $ref: "#/definitions/PrincipalWsDTO"
  OpeningScheduleWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      name:
        type: "string"
      specialDayOpeningList:
        type: "array"
        items:
          $ref: "#/definitions/SpecialOpeningDayWsDTO"
      weekDayOpeningList:
        type: "array"
        items:
          $ref: "#/definitions/WeekdayOpeningDayWsDTO"
  OrderEntryListWsDTO:
    type: "object"
    properties:
      orderEntries:
        type: "array"
        items:
          $ref: "#/definitions/OrderEntryWsDTO"
  OrderEntryWsDTO:
    type: "object"
    properties:
      basePrice:
        $ref: "#/definitions/PriceWsDTO"
      configurationInfos:
        type: "array"
        items:
          $ref: "#/definitions/ConfigurationInfoWsDTO"
      deliveryMode:
        $ref: "#/definitions/DeliveryModeWsDTO"
      deliveryPointOfService:
        $ref: "#/definitions/PointOfServiceWsDTO"
      entryNumber:
        type: "integer"
        format: "int32"
      product:
        $ref: "#/definitions/ProductWsDTO"
      quantity:
        type: "integer"
        format: "int64"
      totalPrice:
        $ref: "#/definitions/PriceWsDTO"
      updateable:
        type: "boolean"
  OrderHistoryListWsDTO:
    type: "object"
    properties:
      orders:
        type: "array"
        items:
          $ref: "#/definitions/OrderHistoryWsDTO"
      pagination:
        $ref: "#/definitions/PaginationWsDTO"
      sorts:
        type: "array"
        items:
          $ref: "#/definitions/SortWsDTO"
  OrderHistoryWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      guid:
        type: "string"
      placed:
        type: "string"
        format: "date-time"
      status:
        type: "string"
      statusDisplay:
        type: "string"
      total:
        $ref: "#/definitions/PriceWsDTO"
  OrderStatusUpdateElementListWsDTO:
    type: "object"
    properties:
      orderStatusUpdateElements:
        type: "array"
        items:
          $ref: "#/definitions/OrderStatusUpdateElementWsDTO"
  OrderStatusUpdateElementWsDTO:
    type: "object"
    properties:
      baseSiteId:
        type: "string"
      code:
        type: "string"
      status:
        type: "string"
  OrderWsDTO:
    type: "object"
    properties:
      appliedOrderPromotions:
        type: "array"
        items:
          $ref: "#/definitions/PromotionResultWsDTO"
      appliedProductPromotions:
        type: "array"
        items:
          $ref: "#/definitions/PromotionResultWsDTO"
      appliedVouchers:
        type: "array"
        items:
          $ref: "#/definitions/VoucherWsDTO"
      calculated:
        type: "boolean"
      code:
        type: "string"
      consignments:
        type: "array"
        items:
          $ref: "#/definitions/ConsignmentWsDTO"
      created:
        type: "string"
        format: "date-time"
      deliveryAddress:
        $ref: "#/definitions/AddressWsDTO"
      deliveryCost:
        $ref: "#/definitions/PriceWsDTO"
      deliveryItemsQuantity:
        type: "integer"
        format: "int64"
      deliveryMode:
        $ref: "#/definitions/DeliveryModeWsDTO"
      deliveryOrderGroups:
        type: "array"
        items:
          $ref: "#/definitions/DeliveryOrderEntryGroupWsDTO"
      deliveryStatus:
        type: "string"
      deliveryStatusDisplay:
        type: "string"
      entries:
        type: "array"
        items:
          $ref: "#/definitions/OrderEntryWsDTO"
      guestCustomer:
        type: "boolean"
      guid:
        type: "string"
      net:
        type: "boolean"
      orderDiscounts:
        $ref: "#/definitions/PriceWsDTO"
      paymentInfo:
        $ref: "#/definitions/PaymentDetailsWsDTO"
      pickupItemsQuantity:
        type: "integer"
        format: "int64"
      pickupOrderGroups:
        type: "array"
        items:
          $ref: "#/definitions/PickupOrderEntryGroupWsDTO"
      productDiscounts:
        $ref: "#/definitions/PriceWsDTO"
      site:
        type: "string"
      status:
        type: "string"
      statusDisplay:
        type: "string"
      store:
        type: "string"
      subTotal:
        $ref: "#/definitions/PriceWsDTO"
      totalDiscounts:
        $ref: "#/definitions/PriceWsDTO"
      totalItems:
        type: "integer"
        format: "int32"
      totalPrice:
        $ref: "#/definitions/PriceWsDTO"
      totalPriceWithTax:
        $ref: "#/definitions/PriceWsDTO"
      totalTax:
        $ref: "#/definitions/PriceWsDTO"
      unconsignedEntries:
        type: "array"
        items:
          $ref: "#/definitions/OrderEntryWsDTO"
      user:
        $ref: "#/definitions/PrincipalWsDTO"
  PaginationWsDTO:
    type: "object"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      sort:
        type: "string"
      totalPages:
        type: "integer"
        format: "int32"
      totalResults:
        type: "integer"
        format: "int64"
  PaymentDetailsListWsDTO:
    type: "object"
    properties:
      payments:
        type: "array"
        items:
          $ref: "#/definitions/PaymentDetailsWsDTO"
  PaymentDetailsWsDTO:
    type: "object"
    properties:
      accountHolderName:
        type: "string"
      billingAddress:
        $ref: "#/definitions/AddressWsDTO"
      cardNumber:
        type: "string"
      cardType:
        $ref: "#/definitions/CardTypeWsDTO"
      defaultPayment:
        type: "boolean"
      expiryMonth:
        type: "string"
      expiryYear:
        type: "string"
      id:
        type: "string"
      issueNumber:
        type: "string"
      saved:
        type: "boolean"
      startMonth:
        type: "string"
      startYear:
        type: "string"
      subscriptionId:
        type: "string"
  PaymentRequestWsDTO:
    type: "object"
    properties:
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
      postUrl:
        type: "string"
  PickupOrderEntryGroupWsDTO:
    type: "object"
    properties:
      deliveryPointOfService:
        $ref: "#/definitions/PointOfServiceWsDTO"
      distance:
        type: "number"
        format: "double"
      entries:
        type: "array"
        items:
          $ref: "#/definitions/OrderEntryWsDTO"
      quantity:
        type: "integer"
        format: "int64"
      totalPriceWithTax:
        $ref: "#/definitions/PriceWsDTO"
  PointOfServiceListWsDTO:
    type: "object"
    properties:
      pointOfServices:
        type: "array"
        items:
          $ref: "#/definitions/PointOfServiceWsDTO"
  PointOfServiceStockWsDTO:
    type: "object"
    properties:
      address:
        $ref: "#/definitions/AddressWsDTO"
      description:
        type: "string"
      displayName:
        type: "string"
      distanceKm:
        type: "number"
        format: "double"
      features:
        type: "object"
        additionalProperties:
          type: "string"
      formattedDistance:
        type: "string"
      geoPoint:
        $ref: "#/definitions/GeoPointWsDTO"
      mapIcon:
        $ref: "#/definitions/ImageWsDTO"
      name:
        type: "string"
      openingHours:
        $ref: "#/definitions/OpeningScheduleWsDTO"
      stockInfo:
        $ref: "#/definitions/StockWsDTO"
      storeContent:
        type: "string"
      storeImages:
        type: "array"
        items:
          $ref: "#/definitions/ImageWsDTO"
      url:
        type: "string"
  PointOfServiceWsDTO:
    type: "object"
    properties:
      address:
        $ref: "#/definitions/AddressWsDTO"
      description:
        type: "string"
      displayName:
        type: "string"
      distanceKm:
        type: "number"
        format: "double"
      features:
        type: "object"
        additionalProperties:
          type: "string"
      formattedDistance:
        type: "string"
      geoPoint:
        $ref: "#/definitions/GeoPointWsDTO"
      mapIcon:
        $ref: "#/definitions/ImageWsDTO"
      name:
        type: "string"
      openingHours:
        $ref: "#/definitions/OpeningScheduleWsDTO"
      storeContent:
        type: "string"
      storeImages:
        type: "array"
        items:
          $ref: "#/definitions/ImageWsDTO"
      url:
        type: "string"
  PriceRangeWsDTO:
    type: "object"
    properties:
      maxPrice:
        $ref: "#/definitions/PriceWsDTO"
      minPrice:
        $ref: "#/definitions/PriceWsDTO"
  PriceWsDTO:
    type: "object"
    properties:
      currencyIso:
        type: "string"
      formattedValue:
        type: "string"
      maxQuantity:
        type: "integer"
        format: "int64"
      minQuantity:
        type: "integer"
        format: "int64"
      priceType:
        type: "string"
        enum:
          - "BUY"
          - "FROM"
      value:
        type: "number"
  PrincipalWsDTO:
    type: "object"
    properties:
      name:
        type: "string"
      uid:
        type: "string"
  ProductExpressUpdateElementListWsDTO:
    type: "object"
    properties:
      productExpressUpdateElements:
        type: "array"
        items:
          $ref: "#/definitions/ProductExpressUpdateElementWsDTO"
  ProductExpressUpdateElementWsDTO:
    type: "object"
    properties:
      catalogId:
        type: "string"
      catalogVersion:
        type: "string"
      code:
        type: "string"
  ProductListWsDTO:
    type: "object"
    properties:
      catalog:
        type: "string"
      currentPage:
        type: "integer"
        format: "int32"
      products:
        type: "array"
        items:
          $ref: "#/definitions/ProductWsDTO"
      totalPageCount:
        type: "integer"
        format: "int32"
      totalProductCount:
        type: "integer"
        format: "int32"
      version:
        type: "string"
  ProductReferenceListWsDTO:
    type: "object"
    properties:
      references:
        type: "array"
        items:
          $ref: "#/definitions/ProductReferenceWsDTO"
  ProductReferenceWsDTO:
    type: "object"
    properties:
      description:
        type: "string"
      preselected:
        type: "boolean"
      quantity:
        type: "integer"
        format: "int32"
      referenceType:
        type: "string"
      target:
        $ref: "#/definitions/ProductWsDTO"
  ProductSearchPageWsDTO:
    type: "object"
    properties:
      breadcrumbs:
        type: "array"
        items:
          $ref: "#/definitions/BreadcrumbWsDTO"
      categoryCode:
        type: "string"
      currentQuery:
        $ref: "#/definitions/SearchStateWsDTO"
      facets:
        type: "array"
        items:
          $ref: "#/definitions/FacetWsDTO"
      freeTextSearch:
        type: "string"
      keywordRedirectUrl:
        type: "string"
      pagination:
        $ref: "#/definitions/PaginationWsDTO"
      products:
        type: "array"
        items:
          $ref: "#/definitions/ProductWsDTO"
      sorts:
        type: "array"
        items:
          $ref: "#/definitions/SortWsDTO"
      spellingSuggestion:
        $ref: "#/definitions/SpellingSuggestionWsDTO"
  ProductWsDTO:
    type: "object"
    properties:
      availableForPickup:
        type: "boolean"
      averageRating:
        type: "number"
        format: "double"
      baseOptions:
        type: "array"
        items:
          $ref: "#/definitions/BaseOptionWsDTO"
      baseProduct:
        type: "string"
      categories:
        type: "array"
        items:
          $ref: "#/definitions/CategoryWsDTO"
      classifications:
        type: "array"
        items:
          $ref: "#/definitions/ClassificationWsDTO"
      code:
        type: "string"
      configurable:
        type: "boolean"
      configuratorType:
        type: "string"
      description:
        type: "string"
      futureStocks:
        type: "array"
        items:
          $ref: "#/definitions/FutureStockWsDTO"
      images:
        type: "array"
        items:
          $ref: "#/definitions/ImageWsDTO"
      manufacturer:
        type: "string"
      multidimensional:
        type: "boolean"
      name:
        type: "string"
      numberOfReviews:
        type: "integer"
        format: "int32"
      potentialPromotions:
        type: "array"
        items:
          $ref: "#/definitions/PromotionWsDTO"
      price:
        $ref: "#/definitions/PriceWsDTO"
      priceRange:
        $ref: "#/definitions/PriceRangeWsDTO"
      productReferences:
        type: "array"
        items:
          $ref: "#/definitions/ProductReferenceWsDTO"
      purchasable:
        type: "boolean"
      reviews:
        type: "array"
        items:
          $ref: "#/definitions/ReviewWsDTO"
      stock:
        $ref: "#/definitions/StockWsDTO"
      summary:
        type: "string"
      url:
        type: "string"
      variantMatrix:
        type: "array"
        items:
          $ref: "#/definitions/VariantMatrixElementWsDTO"
      variantOptions:
        type: "array"
        items:
          $ref: "#/definitions/VariantOptionWsDTO"
      variantType:
        type: "string"
      volumePrices:
        type: "array"
        items:
          $ref: "#/definitions/PriceWsDTO"
      volumePricesFlag:
        type: "boolean"
  PromotionListWsDTO:
    type: "object"
    properties:
      promotions:
        type: "array"
        items:
          $ref: "#/definitions/PromotionWsDTO"
  PromotionOrderEntryConsumedWsDTO:
    type: "object"
    properties:
      adjustedUnitPrice:
        type: "number"
        format: "double"
      code:
        type: "string"
      orderEntryNumber:
        type: "integer"
        format: "int32"
      quantity:
        type: "integer"
        format: "int64"
  PromotionRestrictionWsDTO:
    type: "object"
    properties:
      description:
        type: "string"
      restrictionType:
        type: "string"
  PromotionResultListWsDTO:
    type: "object"
    properties:
      promotions:
        type: "array"
        items:
          $ref: "#/definitions/PromotionResultWsDTO"
  PromotionResultWsDTO:
    type: "object"
    properties:
      consumedEntries:
        type: "array"
        items:
          $ref: "#/definitions/PromotionOrderEntryConsumedWsDTO"
      description:
        type: "string"
      promotion:
        $ref: "#/definitions/PromotionWsDTO"
  PromotionWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      couldFireMessages:
        type: "array"
        items:
          type: "string"
      description:
        type: "string"
      enabled:
        type: "boolean"
      endDate:
        type: "string"
        format: "date-time"
      firedMessages:
        type: "array"
        items:
          type: "string"
      priority:
        type: "integer"
        format: "int32"
      productBanner:
        $ref: "#/definitions/ImageWsDTO"
      promotionGroup:
        type: "string"
      promotionType:
        type: "string"
      restrictions:
        type: "array"
        items:
          $ref: "#/definitions/PromotionRestrictionWsDTO"
      startDate:
        type: "string"
        format: "date-time"
      title:
        type: "string"
  RegionListWsDTO:
    type: "object"
    properties:
      regions:
        type: "array"
        items:
          $ref: "#/definitions/RegionWsDTO"
  RegionWsDTO:
    type: "object"
    properties:
      countryIso:
        type: "string"
      isocode:
        type: "string"
      isocodeShort:
        type: "string"
      name:
        type: "string"
  ReviewListWsDTO:
    type: "object"
    properties:
      reviews:
        type: "array"
        items:
          $ref: "#/definitions/ReviewWsDTO"
  ReviewWsDTO:
    type: "object"
    properties:
      alias:
        type: "string"
      comment:
        type: "string"
      date:
        type: "string"
        format: "date-time"
      headline:
        type: "string"
      id:
        type: "string"
      principal:
        $ref: "#/definitions/UserWsDTO"
      rating:
        type: "number"
        format: "double"
  SaveCartResultWsDTO:
    type: "object"
    properties:
      savedCartData:
        $ref: "#/definitions/CartWsDTO"
  SearchQueryWsDTO:
    type: "object"
    properties:
      value:
        type: "string"
  SearchStateWsDTO:
    type: "object"
    properties:
      query:
        $ref: "#/definitions/SearchQueryWsDTO"
      url:
        type: "string"
  SortWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      name:
        type: "string"
      selected:
        type: "boolean"
  SpecialOpeningDayWsDTO:
    type: "object"
    properties:
      closed:
        type: "boolean"
      closingTime:
        $ref: "#/definitions/TimeWsDTO"
      comment:
        type: "string"
      date:
        type: "string"
        format: "date-time"
      formattedDate:
        type: "string"
      name:
        type: "string"
      openingTime:
        $ref: "#/definitions/TimeWsDTO"
  SpellingSuggestionWsDTO:
    type: "object"
    properties:
      query:
        type: "string"
      suggestion:
        type: "string"
  StockWsDTO:
    type: "object"
    properties:
      stockLevel:
        type: "integer"
        format: "int64"
      stockLevelStatus:
        type: "string"
  StoreFinderSearchPageWsDTO:
    type: "object"
    properties:
      boundEastLongitude:
        type: "number"
        format: "double"
      boundNorthLatitude:
        type: "number"
        format: "double"
      boundSouthLatitude:
        type: "number"
        format: "double"
      boundWestLongitude:
        type: "number"
        format: "double"
      locationText:
        type: "string"
      pagination:
        $ref: "#/definitions/PaginationWsDTO"
      sorts:
        type: "array"
        items:
          $ref: "#/definitions/SortWsDTO"
      sourceLatitude:
        type: "number"
        format: "double"
      sourceLongitude:
        type: "number"
        format: "double"
      stores:
        type: "array"
        items:
          $ref: "#/definitions/PointOfServiceWsDTO"
  StoreFinderStockSearchPageWsDTO:
    type: "object"
    properties:
      boundEastLongitude:
        type: "number"
        format: "double"
      boundNorthLatitude:
        type: "number"
        format: "double"
      boundSouthLatitude:
        type: "number"
        format: "double"
      boundWestLongitude:
        type: "number"
        format: "double"
      locationText:
        type: "string"
      pagination:
        $ref: "#/definitions/PaginationWsDTO"
      product:
        $ref: "#/definitions/ProductWsDTO"
      sorts:
        type: "array"
        items:
          $ref: "#/definitions/SortWsDTO"
      sourceLatitude:
        type: "number"
        format: "double"
      sourceLongitude:
        type: "number"
        format: "double"
      stores:
        type: "array"
        items:
          $ref: "#/definitions/PointOfServiceStockWsDTO"
  SuggestionListWsDTO:
    type: "object"
    properties:
      suggestions:
        type: "array"
        items:
          $ref: "#/definitions/SuggestionWsDTO"
  SuggestionWsDTO:
    type: "object"
    properties:
      value:
        type: "string"
  TimeWsDTO:
    type: "object"
    properties:
      formattedHour:
        type: "string"
      hour:
        type: "string"
        format: "byte"
      minute:
        type: "string"
        format: "byte"
  TitleListWsDTO:
    type: "object"
    properties:
      titles:
        type: "array"
        items:
          $ref: "#/definitions/TitleWsDTO"
  TitleWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      name:
        type: "string"
  UserGroupListWsDTO:
    type: "object"
    properties:
      currentPage:
        type: "integer"
        format: "int32"
      numberOfPages:
        type: "integer"
        format: "int32"
      pageSize:
        type: "integer"
        format: "int32"
      totalNumber:
        type: "integer"
        format: "int32"
      userGroups:
        type: "array"
        items:
          $ref: "#/definitions/UserGroupWsDTO"
  UserGroupWsDTO:
    type: "object"
    properties:
      members:
        type: "array"
        items:
          $ref: "#/definitions/PrincipalWsDTO"
      membersCount:
        type: "integer"
        format: "int32"
      name:
        type: "string"
      subGroups:
        type: "array"
        items:
          $ref: "#/definitions/UserGroupWsDTO"
      uid:
        type: "string"
  UserSignUpWsDTO:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      password:
        type: "string"
      titleCode:
        type: "string"
      uid:
        type: "string"
  UserWsDTO:
    type: "object"
    properties:
      currency:
        $ref: "#/definitions/CurrencyWsDTO"
      customerId:
        type: "string"
      deactivationDate:
        type: "string"
        format: "date-time"
      defaultAddress:
        $ref: "#/definitions/AddressWsDTO"
      displayUid:
        type: "string"
      firstName:
        type: "string"
      language:
        $ref: "#/definitions/LanguageWsDTO"
      lastName:
        type: "string"
      name:
        type: "string"
      title:
        type: "string"
      titleCode:
        type: "string"
      uid:
        type: "string"
  VariantCategoryWsDTO:
    type: "object"
    properties:
      hasImage:
        type: "boolean"
      name:
        type: "string"
      priority:
        type: "integer"
        format: "int32"
  VariantMatrixElementWsDTO:
    type: "object"
    properties:
      elements:
        type: "array"
        items:
          $ref: "#/definitions/VariantMatrixElementWsDTO"
      isLeaf:
        type: "boolean"
      parentVariantCategory:
        $ref: "#/definitions/VariantCategoryWsDTO"
      variantOption:
        $ref: "#/definitions/VariantOptionWsDTO"
      variantValueCategory:
        $ref: "#/definitions/VariantValueCategoryWsDTO"
  VariantOptionQualifierWsDTO:
    type: "object"
    properties:
      image:
        $ref: "#/definitions/ImageWsDTO"
      name:
        type: "string"
      qualifier:
        type: "string"
      value:
        type: "string"
  VariantOptionWsDTO:
    type: "object"
    properties:
      code:
        type: "string"
      priceData:
        $ref: "#/definitions/PriceWsDTO"
      stock:
        $ref: "#/definitions/StockWsDTO"
      url:
        type: "string"
      variantOptionQualifiers:
        type: "array"
        items:
          $ref: "#/definitions/VariantOptionQualifierWsDTO"
  VariantValueCategoryWsDTO:
    type: "object"
    properties:
      name:
        type: "string"
      sequence:
        type: "integer"
        format: "int32"
      superCategories:
        type: "array"
        items:
          $ref: "#/definitions/VariantCategoryWsDTO"
  VoucherListWsDTO:
    type: "object"
    properties:
      vouchers:
        type: "array"
        items:
          $ref: "#/definitions/VoucherWsDTO"
  VoucherWsDTO:
    type: "object"
    properties:
      appliedValue:
        $ref: "#/definitions/PriceWsDTO"
      code:
        type: "string"
      currency:
        $ref: "#/definitions/CurrencyWsDTO"
      description:
        type: "string"
      freeShipping:
        type: "boolean"
      name:
        type: "string"
      value:
        type: "number"
        format: "double"
      valueFormatted:
        type: "string"
      valueString:
        type: "string"
      voucherCode:
        type: "string"
  WeekdayOpeningDayWsDTO:
    type: "object"
    properties:
      closed:
        type: "boolean"
      closingTime:
        $ref: "#/definitions/TimeWsDTO"
      openingTime:
        $ref: "#/definitions/TimeWsDTO"
      weekDay:
        type: "string"
  carrier:
    type: "object"
    properties:
      code:
        type: "string"
        description: "carrier code"
      name:
        type: "string"
        description: "carrier name"
    description: "Carrier"
  consignmentData:
    type: "object"
    properties:
      carrierDetails:
        description: "carrier details"
        $ref: "#/definitions/carrier"
      statusDisplay:
        type: "string"
        example: "SHIPPED"
        description: "consignment status"
      targetArrivalDate:
        type: "string"
        format: "date-time"
        description: "target arrival date"
      trackingEvents:
        type: "array"
        description: "logistics tracking information"
        items:
          $ref: "#/definitions/consignmentEvent"
      trackingID:
        type: "string"
        description: "tracking id"
      trackingUrl:
        type: "string"
        description: "the tracking url provided by the carrier"
    description: "Consignment tracking data"
  consignmentEvent:
    type: "object"
    properties:
      detail:
        type: "string"
        description: "tracking detail"
      eventDate:
        type: "string"
        format: "date-time"
        description: "date of tracking event"
      location:
        type: "string"
        description: "consignment location"
      referenceCode:
        type: "string"
        description: "logistics status"
    description: "Consignment event"
  customerInterestsSearchPage:
    type: "object"
    properties:
      pagination:
        description: "pagination information"
        $ref: "#/definitions/pagination"
      results:
        type: "array"
        description: "list of product interest relation"
        items:
          $ref: "#/definitions/productInterestRelation"
      sorts:
        type: "array"
        description: "sorting information"
        items:
          $ref: "#/definitions/sort"
    description: "Customer interests search page"
  error:
    type: "object"
    properties:
      errorCode:
        type: "string"
        description: "Error code"
      exceptionMessage:
        type: "string"
      language:
        type: "string"
      message:
        type: "string"
        description: "Descriptive, human readable error message."
      position:
        type: "integer"
        format: "int32"
      reason:
        type: "string"
        description: "Additional classification specific for each error type e.g. 'noStock'."
      subject:
        type: "string"
        description: "Identifier of the related object e.g. '1'."
      subjectType:
        type: "string"
        description: "Type of the object related to the error e.g. 'entry'."
      type:
        type: "string"
        description: "Type of the error e.g. 'LowStockError'."
    description: "Error message"
  errorList:
    type: "object"
    properties:
      errors:
        type: "array"
        items:
          $ref: "#/definitions/error"
    description: "List of errors"
  notificationChannel:
    type: "object"
    properties:
      channel:
        type: "string"
        description: "channel type"
        enum:
          - "EMAIL"
          - "SMS"
          - "SITE_MESSAGE"
      enabled:
        type: "boolean"
        example: false
        description: "channel status"
      value:
        type: "string"
        description: "channel value"
    description: "Notification channel"
  notificationPreference:
    type: "object"
    properties:
      channel:
        type: "string"
        description: "preference channel"
        enum:
          - "EMAIL"
          - "SMS"
          - "SITE_MESSAGE"
      enabled:
        type: "boolean"
        example: false
        description: "if true, the channel is on; if false, the channel is off"
      value:
        type: "string"
        description: "the corresponding value of current channel, for example, for SMS it should be a mobile number; for email it should be an email address"
    description: "Notification preference"
  notificationPreferenceList:
    type: "object"
    properties:
      preferences:
        type: "array"
        description: "notification preferences"
        items:
          $ref: "#/definitions/notificationPreference"
    description: "Notification preference list"
  pagination:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int32"
        description: "Number of elements on this page"
      page:
        type: "integer"
        format: "int32"
        description: "Current page number"
      totalCount:
        type: "integer"
        format: "int64"
        description: "Total number of elements"
      totalPages:
        type: "integer"
        format: "int32"
        description: "Total number of pages"
    description: "Pagination info"
  productInterest:
    type: "object"
    properties:
      channels:
        type: "array"
        description: "notification channels"
        items:
          $ref: "#/definitions/notificationChannel"
      creationDate:
        type: "string"
        format: "date-time"
        description: "creation date"
      expiryDate:
        type: "string"
        format: "date-time"
        description: "expiry date"
      product:
        description: "product"
        $ref: "#/definitions/ProductWsDTO"
    description: "Product interest"
  productInterestEntry:
    type: "object"
    properties:
      dateAdded:
        type: "string"
        format: "date-time"
        description: "added date of product interest"
      interestType:
        type: "string"
        description: "product interest type"
    description: "Product interest entry"
  productInterestFutureStock:
    type: "object"
    properties:
      date:
        type: "string"
        format: "date-time"
        description: "estimated available date"
      stock:
        description: "estimated available stock"
        $ref: "#/definitions/StockWsDTO"
    description: "Product interest future stock"
  productInterestRelation:
    type: "object"
    properties:
      product:
        description: "product interest"
        $ref: "#/definitions/productInterest"
      productInterestEntry:
        type: "array"
        description: "list of product interest entry"
        items:
          $ref: "#/definitions/productInterestEntry"
    description: "Product interest relation"
  siteMessage:
    type: "object"
    properties:
      content:
        type: "string"
        description: "message content"
      link:
        type: "string"
        description: "message link"
      notificationType:
        type: "string"
        description: "notification type used for this message"
        enum:
          - "BACK_IN_STOCK"
          - "NOTIFICATION"
      sentDate:
        type: "string"
        format: "date-time"
        description: "sent date"
      title:
        type: "string"
        description: "message title"
      uid:
        type: "string"
        description: "message uid"
    description: "Site message"
  siteMessageSearchPage:
    type: "object"
    properties:
      messages:
        type: "array"
        description: "site messages"
        items:
          $ref: "#/definitions/siteMessage"
      pagination:
        description: "pagination information"
        $ref: "#/definitions/pagination"
      sorts:
        type: "array"
        description: "sorting information"
        items:
          $ref: "#/definitions/sort"
    description: "Site message search page"
  sort:
    type: "object"
    properties:
      asc:
        type: "boolean"
        example: false
      code:
        type: "string"
    description: "Sort option"

